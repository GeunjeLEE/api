syntax = "proto3";

package spaceone.api.monitoring.v1;

import "google/protobuf/struct.proto";
import "google/api/annotations.proto";


service Metric {
    rpc get_data (MetricDataRequest) returns (MetricDataInfo) {
        option (google.api.http) = { get: "/monitoring/v1/data-source/{data_source_id}/metric-data" };
    }
    rpc list (MetricRequest) returns (MetricsInfo) {
        option (google.api.http) = { get: "/monitoring/v1/data-source/{data_source_id}/metrics" };
    }
}

message MetricRequest {
    // is_required: true
    string data_source_id = 1;
    // is_required: true
    repeated string resources = 2;
    // is_required: true
    string domain_id = 10;
}

message MetricDataRequest {
    // is_required: true
    string data_source_id = 1;
    // is_required: true
    google.protobuf.Struct query = 2;
    // is_required: true
    string metric = 3;
    // is_required: true
    string start = 10;
    // is_required: true
    string end = 11;
    // is_required: false
    int32 period = 12;
    // is_required: false
    string stat = 13;
    // is_required: true
    string domain_id = 20;
}

message MetricInfo {
    string key = 1;
    string name = 2;
    google.protobuf.Struct query = 3;
    string unit = 4;
}

message MetricsInfo {
    repeated MetricInfo metrics = 1;
    google.protobuf.Struct available_resources = 2;
    string domain_id = 3;
}

message MetricDataInfo {
    google.protobuf.ListValue labels = 1;
    google.protobuf.Struct values = 2;
    string domain_id = 3;
}
