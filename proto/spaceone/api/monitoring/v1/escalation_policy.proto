syntax = "proto3";

package spaceone.api.monitoring.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service EscalationPolicy {
    rpc create (CreateEscalationPolicyRequest) returns (EscalationPolicyInfo) {
        option (google.api.http) = { post: "/monitoring/v1/escalation-policies" };
    }
    rpc update (UpdateEscalationPolicyRequest) returns (EscalationPolicyInfo) {
        option (google.api.http) = { put: "/monitoring/v1/escalation-policy/{escalation_policy_id}" };
    }
    rpc set_default (EscalationPolicyRequest) returns (EscalationPolicyInfo) {
        option (google.api.http) = { put: "/monitoring/v1/escalation-policy/{escalation_policy_id}/set-default" };
    }
    rpc delete (EscalationPolicyRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/monitoring/v1/escalation-policy/{escalation_policy_id}" };
    }
    rpc get (GetEscalationPolicyRequest) returns (EscalationPolicyInfo) {
        option (google.api.http) = { get: "/monitoring/v1/escalation-policy/{escalation_policy_id}" };
    }
    rpc list (EscalationPolicyQuery) returns (EscalationPoliciesInfo) {
        option (google.api.http) = {
            get: "/monitoring/v1/escalation-policies"
            additional_bindings {
                post: "/monitoring/v1/escalation-policies/search"
            }
        };
    }
    rpc stat (EscalationPolicyStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/monitoring/v1/escalation-policies/stat" };
    }
}

enum EscalationFinishCondition {
    FINISH_CONDITION_NONE = 0;
    ALL = 1;
    HIGH_ONLY = 2;
}

message EscalationPolicyRules {
    string notification_level = 1;
    int32 escalate_minutes = 2;
}

message CreateEscalationPolicyRequest {
    // is_required: true
    string name = 1;
    // is_required: true
    repeated EscalationPolicyRules rules = 2;
    // is_required: false
    int32 repeat_count = 3;
    // is_required: false
    EscalationFinishCondition finish_condition = 4;
    // is_required: false
    string project_id = 5;
    // is_required: false
    google.protobuf.Struct tags = 6;
    // is_required: true
    string domain_id = 11;
}

message UpdateEscalationPolicyRequest {
    // is_required: true
    string escalation_policy_id = 1;
    // is_required: false
    string name = 2;
    // is_required: false
    repeated EscalationPolicyRules rules = 3;
    // is_required: false
    int32 repeat_count = 4;
    // is_required: false
    EscalationFinishCondition finish_condition = 5;
    // is_required: false
    google.protobuf.Struct tags = 6;
    // is_required: true
    string domain_id = 11;
}

message EscalationPolicyRequest {
    // is_required: true
    string escalation_policy_id = 1;
    // is_required: true
    string domain_id = 2;
}

message GetEscalationPolicyRequest {
    // is_required: true
    string escalation_policy_id = 1;
    // is_required: true
    string domain_id = 2;
    // is_required: false
    repeated string only = 3;
}

message EscalationPolicyQuery {
    // is_required: false
    spaceone.api.core.v1.Query query = 1;
    // is_required: false
    string escalation_policy_id = 2;
    // is_required: false
    string name = 3;
    // is_required: true
    string domain_id = 11;
}

message EscalationPolicyInfo {
    string escalation_policy_id = 1;
    string name = 2;
    bool is_default = 3;
    repeated EscalationPolicyRules rules = 4;
    int32 repeat_count = 5;
    string project_id = 6;
    google.protobuf.Struct tags = 7;
    string domain_id = 11;
    string created_at = 21;
}

message EscalationPoliciesInfo {
    repeated EscalationPolicyInfo results = 1;
    int32 total_count = 2;
}

message EscalationPolicyStatQuery {
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 1;
    // is_required: true
    string domain_id = 2;
}