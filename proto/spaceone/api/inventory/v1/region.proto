syntax = "proto3";

package spaceone.api.inventory.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service Region {
    rpc create (CreateRegionRequest) returns (RegionInfo) {
        option (google.api.http) = { post: "/inventory/v1/regions" };
    }
    rpc update (UpdateRegionRequest) returns (RegionInfo) {
        option (google.api.http) = { put: "/inventory/v1/region/{region_id}" };
    }
    rpc delete (RegionRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/inventory/v1/region/{region_id}" };
    }
    rpc get (GetRegionRequest) returns (RegionInfo) {
        option (google.api.http) = { get: "/inventory/v1/region/{region_id}" };
    }
    rpc list (RegionQuery) returns (RegionsInfo) {
        option (google.api.http) = {
            get: "/inventory/v1/regions"
            additional_bindings {
                post: "/inventory/v1/regions/search"
            }
        };
    }
    rpc stat (RegionStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/inventory/v1/regions/stat" };
    }
}

message CreateRegionRequest {
    /*
    is_required: true
    desc:
    */
    string name = 1;
    /*
    is_required: false
    desc:
    */
    google.protobuf.Struct tags = 2;
    /*
    is_required: true
    desc:
    */
    string domain_id = 3;
}

message UpdateRegionRequest {
    /*
    is_required: true
    desc:
    */
    string region_id = 1;
    /*
    is_required: false
    desc:
    */
    string name = 2;
    /*
    is_required: false
    desc:
    */
    google.protobuf.Struct tags = 3;
    /*
    is_required: true
    desc:
    */
    string domain_id = 4;
}

message RegionRequest {
    /*
    is_required: true
    desc:
    */
    string region_id = 1;
    /*
    is_required: true
    desc:
    */
    string domain_id = 2;
}

message GetRegionRequest {
    /*
    is_required: true
    desc:
    */
    string region_id = 1;
    /*
    is_required: true
    desc:
    */
    string domain_id = 2;
    /*
    is_required: false
    desc:
    */
    repeated string only = 3;
}

message RegionQuery {
    /*
    is_required: false
    desc:
    */
    spaceone.api.core.v1.Query query = 1;
    /*
    is_required: false
    desc:
    */
    string region_id = 2;
    /*
    is_required: false
    desc:
    */
    string name = 3;
    /*
    is_required: true
    desc:
    */
    string domain_id = 4;
}

message RegionInfo {
    enum State {
        NONE = 0;
        ACTIVE = 1;
        DELETED = 2;
    }

    string region_id = 1;
    State state = 2;
    string name = 3;
    google.protobuf.Struct tags = 4;
    string domain_id = 5;
    google.protobuf.Timestamp created_at = 6;
    google.protobuf.Timestamp deleted_at = 7;
}

message RegionsInfo {
    repeated RegionInfo results = 1;
    int32 total_count = 2;
}

message RegionStatQuery {
    /*
    is_required: true
    desc:
    */
    spaceone.api.core.v1.StatisticsQuery query = 1;
    /*
    is_required: true
    desc:
    */
    string domain_id = 2;
}