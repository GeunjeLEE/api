syntax = "proto3";

package spaceone.api.inventory.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service NetworkType {
    rpc create (CreateNetworkTypeRequest) returns (NetworkTypeInfo) {
        option (google.api.http) = { post: "/inventory/v1/network-types" };
    }
    rpc update (UpdateNetworkTypeRequest) returns (NetworkTypeInfo) {
        option (google.api.http) = { put: "/inventory/v1/network-type/{network_type_id}" };
    }
    rpc delete (NetworkTypeRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/inventory/v1/network-type/{network_type_id}" };
    }
    rpc get (GetNetworkTypeRequest) returns (NetworkTypeInfo) {
        option (google.api.http) = { get: "/inventory/v1/network-type/{network_type_id}" };
    }
    rpc list (NetworkTypeQuery) returns (NetworkTypesInfo) {
        option (google.api.http) = {
            get: "/inventory/v1/network-types"
            additional_bindings {
                post: "/inventory/v1/network-types/search"
            }
        };
    }
    rpc stat (NetworkTypeStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/inventory/v1/network-types/stat" };
    }
}

message CreateNetworkTypeRequest {
    /*
    is_required: true
    desc:
    */
    string name = 1;
    /*
    is_required: true
    desc:
    */
    string domain_id = 2;
    /*
    is_required: false
    desc:
    */
    google.protobuf.Struct tags = 3;
}

message UpdateNetworkTypeRequest {
    /*
    is_required: true
    desc:
    */
    string network_type_id = 1;
    /*
    is_required: false
    desc:
    */
    string name = 2;
    /*
    is_required: true
    desc:
    */
    string domain_id = 3;
    /*
    is_required: false
    desc:
    */
    google.protobuf.Struct tags = 4;
}

message NetworkTypeRequest {
    /*
    is_required: true
    desc:
    */
    string network_type_id = 1;
    /*
    is_required: true
    desc:
    */
    string domain_id = 2;
}

message GetNetworkTypeRequest {
    /*
    is_required: true
    desc:
    */
    string network_type_id = 1;
    /*
    is_required: true
    desc:
    */
    string domain_id = 2;
    /*
    is_required: false
    desc:
    */
    repeated string only = 3;
}

message NetworkTypeQuery {
    /*
    is_required: false
    desc:
    */
    spaceone.api.core.v1.Query query = 1;
    /*
    is_required: false
    desc:
    */
    string network_type_id = 2;
    /*
    is_required: false
    desc:
    */
    string name = 3;
    /*
    is_required: true
    desc:
    */
    string domain_id = 4;
}

message NetworkTypeInfo {
    string network_type_id = 1;
    string name = 2;
    google.protobuf.Struct tags = 3;
    string domain_id = 4;
    google.protobuf.Timestamp created_at = 5;
}

message NetworkTypesInfo {
    repeated NetworkTypeInfo results = 1;
    int32 total_count = 2;
}

message NetworkTypeStatQuery {
    /*
    is_required: true
    desc:
    */
    spaceone.api.core.v1.StatisticsQuery query = 1;
    /*
    is_required: true
    desc:
    */
    string domain_id = 2;
}