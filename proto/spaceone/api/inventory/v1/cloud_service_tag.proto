syntax = "proto3";

package spaceone.api.inventory.v1;

import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";

service CloudServiceTag {
  rpc list (CloudServiceTagQuery) returns (CloudServiceTagsInfo) {
    option (google.api.http) = {
      get: "/inventory/v1/cloud-service-tags"
      additional_bindings {
        post: "/inventory/v1/cloud-service-tags/search"
      }
    };
  }

  rpc stat (CloudServiceTagStatQuery) returns (google.protobuf.Struct) {
    option (google.api.http) = {post: "/inventory/v1/cloud-service-tags/stat"};
  }
}

message CloudServiceTagQuery {
  // is_required: false
  spaceone.api.core.v1.Query query = 1;
  // is_required: true
  string cloud_service_id = 2;
  // is_required: false
  string key = 3;
  // is_required: false
  string type = 4;
  // is_required: false
  string provider = 5;
  // is_required: true
  string domain_id = 10;
}

message CloudServiceTagInfo {
  string cloud_service_id = 1;
  string key = 2;
  string value = 3;
  string type = 4;
  string provider = 5;
  string domain_id = 11;
  string created_at = 21;
}

message CloudServiceTagsInfo {
  repeated CloudServiceTagInfo results = 1;
  int32 total_count = 2;
}

message CloudServiceTagStatQuery {
  // is_required: true
  spaceone.api.core.v1.StatisticsQuery query = 1;
  // is_required: true
  string domain_id = 2;
  // is_required: true
  string cloud_service_id = 3;
}