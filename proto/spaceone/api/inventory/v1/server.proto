syntax = "proto3";

package spaceone.api.inventory.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";
import "spaceone/api/inventory/v1/region.proto";
import "spaceone/api/inventory/v1/zone.proto";
import "spaceone/api/inventory/v1/pool.proto";


service Server {
    rpc create (CreateServerRequest) returns (ServerInfo) {
        option (google.api.http) = { post: "/inventory/v1/servers" };
    }
    rpc update (UpdateServerRequest) returns (ServerInfo) {
        option (google.api.http) = { put: "/inventory/v1/server/{server_id}" };
    }
    rpc pin_data (PinServerDataRequest) returns (ServerInfo) {
        option (google.api.http) = { put: "/inventory/v1/server/{server_id}/pin-data" };
    }
    rpc delete (ServerRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/inventory/v1/server/{server_id}" };
    }
    rpc get (GetServerRequest) returns (ServerInfo) {
        option (google.api.http) = { get: "/inventory/v1/server/{server_id}" };
    }
    rpc list (ServerQuery) returns (ServersInfo) {
        option (google.api.http) = {
            get: "/inventory/v1/servers"
            additional_bindings {
                post: "/inventory/v1/servers/search"
            }
        };
    }
    rpc stat (ServerStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/inventory/v1/servers/stat" };
    }
}

enum ServerState {
    STATE_NONE = 0;
    PENDING = 1;
    INSERVICE = 2;
    MAINTENANCE = 3;
    CLOSED = 4;
    DELETED = 5;
}

enum ServerType {
    SERVER_TYPE_NONE = 0;
    BAREMETAL = 1;
    VM = 2;
    HYPERVISOR = 3;
    UNKNOWN = 4;
}

enum ServerOSType {
    OS_TYPE_NONE = 0;
    LINUX = 1;
    WINDOWS = 2;
}

message ServerReference {
    string resource_id = 1;
    string external_link = 2;
}

message CreateServerRequest {
    /*
    is_required: false
    desc:
    */
    string name = 1;
    /*
    is_required: false
    desc:
    */
    ServerState state = 2;
    /*
    is_required: true
    desc:
    */
    string primary_ip_address = 3;
    /*
    is_required: false
    desc:
    */
    ServerType server_type = 4;
    /*
    is_required: true
    desc:
    */
    ServerOSType os_type = 5;
    /*
    is_required: false
    desc:
    */
    string provider = 6;
    /*
    is_required: false
    desc:
    */
    google.protobuf.Struct data = 11;
    /*
    is_required: false
    desc:
    */
    google.protobuf.Struct metadata = 12;
    /*
    is_required: false
    desc:
    */
    google.protobuf.ListValue nics  = 13;
    /*
    is_required: false
    desc:
    */
    google.protobuf.ListValue disks  = 14;
    /*
    is_required: false
    desc:
    */
    ServerReference reference = 15;
    /*
    is_required: false
    desc:
    */
    google.protobuf.Struct tags = 16;
    /*
    is_required: false
    desc:
    */
    string asset_id = 21;
    /*
    is_required: false
    desc:
    */
    string pool_id = 22;
    /*
    is_required: false
    desc:
    */
    string zone_id = 23;
    /*
    is_required: false
    desc:
    */
    string region_id = 24;
    /*
    is_required: false
    desc:
    */
    string project_id = 25;
    /*
    is_required: true
    desc:
    */
    string domain_id = 26;
}

message UpdateServerRequest {
    /*
    is_required: true
    desc:
    */
    string server_id = 1;
    /*
    is_required: false
    desc:
    */
    string name = 2;
    /*
    is_required: false
    desc:
    */
    ServerState state = 3;
    /*
    is_required: false
    desc:
    */
    string primary_ip_address = 4;
    /*
    is_required: false
    desc:
    */
    ServerType server_type = 5;
    /*
    is_required: false
    desc:
    */
    ServerOSType os_type = 6;
    /*
    is_required: false
    desc:
    */
    string provider = 7;
    /*
    is_required: false
    desc:
    */
    google.protobuf.Struct data = 11;
    /*
    is_required: false
    desc:
    */
    google.protobuf.Struct metadata = 12;
    /*
    is_required: false
    desc:
    */
    google.protobuf.ListValue nics  = 13;
    /*
    is_required: false
    desc:
    */
    google.protobuf.ListValue disks  = 14;
    /*
    is_required: false
    desc:
    */
    ServerReference reference = 15;
    /*
    is_required: false
    desc:
    */
    google.protobuf.Struct tags = 16;
    /*
    is_required: false
    desc:
    */
    string asset_id = 21;
    /*
    is_required: false
    desc:
    */
    string pool_id = 22;
    /*
    is_required: false
    desc:
    */
    string zone_id = 23;
    /*
    is_required: false
    desc:
    */
    string region_id = 24;
    /*
    is_required: false
    desc:
    */
    string project_id = 25;
    /*
    is_required: true
    desc:
    */
    string domain_id = 26;
    /*
    is_required: false
    desc:
    */
    bool release_region = 33;
    /*
    is_required: false
    desc:
    */
    bool release_project = 34;
}

message PinServerDataRequest {
    /*
    is_required: true
    desc:
    */
    string server_id = 1;
    /*
    is_required: true
    desc:
    */
    repeated string keys = 2;
    /*
    is_required: true
    desc:
    */
    string domain_id = 3;
}

message ServerRequest {
    /*
    is_required: true
    desc:
    */
    string server_id = 1;
    /*
    is_required: true
    desc:
    */
    string domain_id = 2;
}

message GetServerRequest {
    /*
    is_required: true
    desc:
    */
    string server_id = 1;
    /*
    is_required: true
    desc:
    */
    string domain_id = 2;
    /*
    is_required: false
    desc:
    */
    repeated string only = 3;
}

message ServerQuery {
    /*
    is_required: false
    desc:
    */
    spaceone.api.core.v1.Query query = 1;
    /*
    is_required: false
    desc:
    */
    string server_id = 2;
    /*
    is_required: false
    desc:
    */
    string name = 3;
    /*
    is_required: false
    desc:
    */
    string state = 4;
    /*
    is_required: false
    desc:
    */
    string primary_ip_address = 5;
    /*
    is_required: false
    desc:
    */
    string ip_addresses = 6;
    /*
    is_required: false
    desc:
    */
    ServerType server_type = 7;
    /*
    is_required: false
    desc:
    */
    ServerOSType os_type = 8;
    /*
    is_required: false
    desc:
    */
    string provider = 9;
    /*
    is_required: false
    desc:
    */
    string asset_id = 11;
    /*
    is_required: false
    desc:
    */
    string pool_id = 12;
    /*
    is_required: false
    desc:
    */
    string zone_id = 13;
    /*
    is_required: false
    desc:
    */
    string region_id = 14;
    /*
    is_required: false
    desc:
    */
    string resource_group_id = 15;
    /*
    is_required: false
    desc:
    */
    string project_id = 16;
    /*
    is_required: false
    desc:
    */
    string domain_id = 17;
}

message ServerInfo {
    string server_id = 1;
    string name = 2;
    ServerState state = 3;
    string primary_ip_address = 4;
    google.protobuf.ListValue ip_addresses = 5;
    ServerType server_type = 6;
    ServerOSType os_type = 7;
    string provider = 8;

    google.protobuf.Struct data = 11;
    google.protobuf.Struct metadata = 12;
    google.protobuf.ListValue nics  = 13;
    google.protobuf.ListValue disks  = 14;
    ServerReference reference = 15;
    google.protobuf.Struct tags = 16;
    google.protobuf.Struct collection_info = 17;

    PoolInfo pool_info = 21;
    ZoneInfo zone_info = 22;
    RegionInfo region_info = 23;
    string project_id = 24;
    string domain_id = 25;

    google.protobuf.Timestamp created_at = 31;
    google.protobuf.Timestamp updated_at = 32;
    google.protobuf.Timestamp deleted_at = 33;
}

message ServersInfo {
    repeated ServerInfo results = 1;
    int32 total_count = 2;
}

message ServerStatQuery {
    /*
    is_required: true
    desc:
    */
    spaceone.api.core.v1.StatisticsQuery query = 1;
    /*
    is_required: true
    desc:
    */
    string domain_id = 2;
}