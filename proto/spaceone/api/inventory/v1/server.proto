syntax = "proto3";

package spaceone.api.inventory.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service Server {
    rpc create (CreateServerRequest) returns (ServerInfo) {
        option (google.api.http) = { post: "/inventory/v1/servers" };
    }
    rpc update (UpdateServerRequest) returns (ServerInfo) {
        option (google.api.http) = { put: "/inventory/v1/server/{server_id}" };
    }
    rpc pin_data (PinServerDataRequest) returns (ServerInfo) {
        option (google.api.http) = { put: "/inventory/v1/server/{server_id}/pin-data" };
    }
    rpc delete (ServerRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/inventory/v1/server/{server_id}" };
    }
    rpc get (GetServerRequest) returns (ServerInfo) {
        option (google.api.http) = { get: "/inventory/v1/server/{server_id}" };
    }
    rpc list (ServerQuery) returns (ServersInfo) {
        option (google.api.http) = {
            get: "/inventory/v1/servers"
            additional_bindings {
                post: "/inventory/v1/servers/search"
            }
        };
    }
    rpc stat (ServerStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/inventory/v1/servers/stat" };
    }
}

enum ServerState {
    STATE_NONE = 0;
    PENDING = 1;
    INSERVICE = 2;
    MAINTENANCE = 3;
    CLOSED = 4;
    DELETED = 5;
}

enum ServerType {
    SERVER_TYPE_NONE = 0;
    BAREMETAL = 1;
    VM = 2;
    HYPERVISOR = 3;
    UNKNOWN = 4;
}

enum ServerOSType {
    OS_TYPE_NONE = 0;
    LINUX = 1;
    WINDOWS = 2;
}

message ServerReference {
    string resource_id = 1;
    string external_link = 2;
}

message ServerNIC {
    // is_required: true
    int32 device_index = 1;
    // is_required: false
    string device = 2;
    // is_required: false
    string nic_type = 3;
    // is_required: true
    repeated string ip_addresses = 4;
    // is_required: false
    string cidr = 5;
    // is_required: false
    string mac_address = 6;
    // is_required: false
    string public_ip_address = 7;
    // is_required: false
    google.protobuf.Struct tags = 8;
}

message ServerDisk {
    // is_required: true
    int32 device_index = 1;
    // is_required: false
    string device = 2;
    // is_required: false
    string disk_type = 3;
    // is_required: false
    float size = 4;
    // is_required: false
    google.protobuf.Struct tags = 5;
}

message CreateServerRequest {
    // is_required: false
    string name = 1;
    // is_required: false
    ServerState state = 2;
    // is_required: false
    string primary_ip_address = 3;
    // is_required: false
    ServerType server_type = 4;
    // is_required: true
    ServerOSType os_type = 5;

    // is_required: false
    string provider = 6;
    // is_required: false
    string region_code = 7;
    // is_required: false
    string region_type = 8;

    // is_required: false
    google.protobuf.Struct data = 11;
    // is_required: false
    google.protobuf.Struct metadata = 12;
    // is_required: false
    repeated ServerNIC nics  = 13;
    // is_required: false
    repeated ServerDisk disks  = 14;
    // is_required: false
    ServerReference reference = 15;
    // is_required: false
    google.protobuf.Struct tags = 16;
    // is_required: false
    string project_id = 22;
    // is_required: true
    string domain_id = 23;
}

message UpdateServerRequest {
    // is_required: true
    // desc: server unique id
    string server_id = 1;
    // is_required: false
    string name = 2;
    // is_required: false
    ServerState state = 3;
    // is_required: false
    string primary_ip_address = 4;
    // is_required: false
    ServerType server_type = 5;
    // is_required: false
    ServerOSType os_type = 6;
    // is_required: false
    string provider = 7;
    // is_required: false
    google.protobuf.Struct data = 11;
    // is_required: false
    google.protobuf.Struct metadata = 12;
    // is_required: false
    repeated ServerNIC nics  = 13;
    // is_required: false
    repeated ServerDisk disks  = 14;
    // is_required: false
    ServerReference reference = 15;
    // is_required: false
    google.protobuf.Struct tags = 16;

    // is_required: false
    string region_code = 20;
    // is_required: false
    string region_type = 21;
    // is_required: false
    string project_id = 22;
    // is_required: true
    string domain_id = 23;
    // is_required: false
    bool release_region = 33;
    // is_required: false
    bool release_project = 34;
}

message PinServerDataRequest {
    // is_required: true
    string server_id = 1;
    // is_required: true
    repeated string keys = 2;
    // is_required: true
    string domain_id = 3;
}

message ServerRequest {
    // is_required: true
    string server_id = 1;
    // is_required: true
    string domain_id = 2;
}

message GetServerRequest {
    // is_required: true
    string server_id = 1;
    // is_required: true
    string domain_id = 2;
    // is_required: false
    repeated string only = 3;
}

message ServerQuery {
    // is_required: false
    spaceone.api.core.v1.Query query = 1;
    // is_required: false
    string server_id = 2;
    // is_required: false
    string name = 3;
    // is_required: false
    string state = 4;
    // is_required: false
    string primary_ip_address = 5;
    // is_required: false
    string ip_addresses = 6;
    // is_required: false
    ServerType server_type = 7;
    // is_required: false
    ServerOSType os_type = 8;

    // is_required: false
    string provider = 9;
    // is_required: false
    string region_code = 10;
    // is_required: false
    string region_type = 11;

    // is_required: false
    string resource_group_id = 21;
    // is_required: false
    string project_id = 22;
    // is_required: true
    string domain_id = 23;
}

message ServerInfo {
    string server_id = 1;
    string name = 2;
    ServerState state = 3;
    string primary_ip_address = 4;
    google.protobuf.ListValue ip_addresses = 5;
    ServerType server_type = 6;
    ServerOSType os_type = 7;

    string provider = 8;
    string region_code = 9;
    string region_type = 10;

    google.protobuf.Struct data = 11;
    google.protobuf.Struct metadata = 12;
    repeated ServerNIC nics  = 13;
    repeated ServerDisk disks  = 14;
    ServerReference reference = 15;
    google.protobuf.Struct tags = 16;
    google.protobuf.Struct collection_info = 17;


    string project_id = 22;
    string domain_id = 23;

    google.protobuf.Timestamp created_at = 31;
    google.protobuf.Timestamp updated_at = 32;
    google.protobuf.Timestamp deleted_at = 33;
}

message ServersInfo {
    repeated ServerInfo results = 1;
    int32 total_count = 2;
}

message ServerStatQuery {
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 1;
    // is_required: true
    string domain_id = 2;
    // is_required: false
    string resource_group_id = 3;
}