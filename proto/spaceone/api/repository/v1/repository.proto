syntax = "proto3";

package spaceone.api.repository.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";

service Repository {
    rpc register (CreateRepositoryRequest) returns (RepositoryInfo) {
        option (google.api.http) = { post: "/repository/v1/repositories" };
    }
    rpc update (UpdateRepositoryRequest) returns (RepositoryInfo) {
        option (google.api.http) = { put: "/repository/v1/repository/{repository_id}" };
    }
    rpc deregister (RepositoryRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/repository/v1/repository/{repository_id}" };
    }
    rpc get (GetRepositoryRequest) returns (RepositoryInfo) {
        option (google.api.http) = { get: "/repository/v1/repositories/{repository_id}" };
    }
    rpc list (RepositoryQuery) returns (RepositoriesInfo) {
        option (google.api.http) = {
            get: "/repository/v1/repositories"
            additional_bindings {
                post: "/repository/v1/repositories/search"
            }
        };
    }
    rpc stat (RepositoryStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/repository/v1/repositories/stat" };
    }
}

message CreateRepositoryRequest {
    /*
    is_required: true
    desc:
    */
    string name = 1;
    /*
    is_required: true
    desc:
    */
    string repository_type = 2;
    /*
    is_required: false
    desc:
    */
    string endpoint = 10;
    /*
    is_required: false
    desc:
    */
    string version = 11;
    /*
    is_required: false
    desc:
    */
    string secret_id = 12;
    /*
    is_required: false
    desc:
    */
    string domain_id = 13;
}

message UpdateRepositoryRequest {
    /*
    is_required: true
    desc:
    */
    string repository_id = 1;
    /*
    is_required: true
    desc:
    */
    string name = 2;
    /*
    is_required: false
    desc:
    */
    string domain_id = 3;
}

message RepositoryRequest {
    /*
    is_required: true
    desc:
    */
    string repository_id = 1;
    /*
    is_required: false
    desc:
    */
    string domain_id = 2;
}

message GetRepositoryRequest {
    /*
    is_required: true
    desc:
    */
    string repository_id = 1;
    /*
    is_required: false
    desc:
    */
    repeated string only = 2;
    /*
    is_required: false
    desc:
    */
    string domain_id = 3;
}

message RepositoryQuery {
    /*
    is_required: false
    desc:
    */
    spaceone.api.core.v1.Query query = 1;
    /*
    is_required: false
    desc:
    */
    string repository_id = 2;
    /*
    is_required: false
    desc:
    */
    string name = 3;
    /*
    is_required: false
    desc:
    */
    string repository_type = 4;
    /*
    is_required: false
    desc:
    */
    string domain_id = 5;
}

message RepositoryInfo {
    string repository_id = 1;
    string name = 2;
    string repository_type = 3;
    string endpoint = 10;
    string version = 11;
    string secret_id = 12;
    google.protobuf.Timestamp created_at = 20;
}

message RepositoriesInfo {
    repeated RepositoryInfo results = 1;
    int32 total_count = 2;
}

message RepositoryStatQuery {
    /*
    is_required: true
    desc:
    */
    spaceone.api.core.v1.StatisticsQuery query = 1;
    /*
    is_required: true
    desc:
    */
    string domain_id = 2;
}