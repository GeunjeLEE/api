syntax = "proto3";

package spaceone.api.spot_automation.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service SpotGroup {
    rpc create (CreateSpotGroupRequest) returns (SpotGroupInfo) {
        option (google.api.http) = { post: "/spot-automation/v1/spot-groups" };
    }
    rpc update (UpdateSpotGroupRequest) returns (SpotGroupInfo) {
        option (google.api.http) = { put: "/spot-automation/v1/spot-group/{spot_group_id}" };
    }
    rpc delete (SpotGroupRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/spot-automation/v1/spot-group/{spot_group_id}" };
    }
    rpc get (GetSpotGroupRequest) returns (SpotGroupInfo) {
        option (google.api.http) = { get: "/spot-automation/v1/spot-group/{spot_group_id}" };
    }
    rpc list (QuerySpotGroupRequest) returns (SpotGroupsInfo) {
        option (google.api.http) = {
            get: "/spot-automation/v1/spot-groups"
            additional_bindings {
                post: "/spot-automation/v1/spot-groups/search"
            }
        };
    }
    rpc get_candidates (GetCandidatesRequest) returns (CandidatesInfo) {
        option (google.api.http) = { get: "/spot-automation/v1/spot-group/candidates" };
    }
    rpc stat (SpotGroupStatRequest) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/spot-automation/v1/spot-groups/stat" };
    }
}

message SpotGroupResourceReference {
    string resource_id = 1;
    string external_link = 2;
}

message CreateSpotGroupRequest {
    // is_required: true
    string name = 1;
    // is_required: true
    string resource_id = 2;
    // is_required: true
    string resource_type = 3;
    // is_required: true
    google.protobuf.Struct options = 10;
    // is_required: false
    google.protobuf.Struct tags = 11;
    // is_required: true
    string user_id = 21;
    // is_required: true
    string domain_id = 22;
}

message UpdateSpotGroupRequest {
    // is_required: true
    string spot_group_id = 1;
    // is_required: false
    string name = 2;
    // is_required: false
    google.protobuf.Struct options = 3;
    // is_required: false
    google.protobuf.Struct tags = 11;
    // is_required: true
    string domain_id = 21;
}

message SpotGroupRequest {
    // is_required: true
    string spot_group_id = 1;
    // is_required: true
    string domain_id = 2;
}

message GetSpotGroupRequest {
    // is_required: true
    string spot_group_id = 1;
    // is_required: true
    string domain_id = 2;
    // is_required: false
    repeated string only = 3;
}

message GetCandidatesRequest {
    // is_required: true
    string resource_id = 1;
    // is_required: true
    string resource_type = 2;
    // is_required: true
    int32 limit = 3;
    // is_required: true
    string domain_id = 4;
}

message QuerySpotGroupRequest {
    // is_required: false
    spaceone.api.core.v1.Query query = 1;
    // is_required: false
    string spot_group_id = 2;
    // is_required: false
    string name = 3;
    // is_required: false
    string resource_id = 4;
    // is_required: false
    string resource_type = 5;
    // is_required: false
    string provider = 6;
    // is_required: false
    string project_id = 7;
    // is_required: false
    string region_code = 8;
    // is_required: true
    string domain_id = 9;
}

message SpotGroupStatRequest {
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 1;
    // is_required: true
    string domain_id = 2;
}

message SpotGroupInfo {
    string spot_group_id = 1;
    string name = 2;
    string resource_id = 3;
    string resource_type = 4;
    string region_code = 5;
    string provider = 6;
    string cloud_service_group = 7;
    string cloud_service_type = 8;
    SpotGroupResourceReference reference = 9;
    google.protobuf.Struct options = 10;
    string project_id = 11;

    google.protobuf.Struct tags = 20;
    string domain_id = 21;
    string created_by = 22;
    string created_at = 23;
}

message SpotGroupsInfo {
    repeated SpotGroupInfo results = 1;
    int32 total_count = 2;
}

message CandidateInfo {
    string type = 1;
    int32 priority = 2;
}

message CandidatesInfo {
    repeated CandidateInfo results = 1;
    int32 total_count = 2;
}