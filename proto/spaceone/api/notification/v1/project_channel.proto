syntax = "proto3";

package spaceone.api.notification.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service ProjectChannel {
    rpc create (CreateProjectChannelRequest) returns (ProjectChannelInfo) {
        option (google.api.http) = { post: "/notification/v1/project-channels" };
    }
    rpc update (UpdateProjectChannelRequest) returns (ProjectChannelInfo) {
        option (google.api.http) = { put: "/notification/v1/project-channel/{project_channel_id}" };
    }
    rpc enable (ProjectChannelRequest) returns (ProjectChannelInfo) {
        option (google.api.http) = { put: "/notification/v1/project-channel/{project_channel_id}/enable" };
    }
    rpc disable (ProjectChannelRequest) returns (ProjectChannelInfo) {
        option (google.api.http) = { put: "/notification/v1/project-channel/{project_channel_id}/disable" };
    }
    rpc delete (ProjectChannelRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/notification/v1/project-channel/{project_channel_id}" };
    }
    rpc get (GetProjectChannelRequest) returns (ProjectChannelInfo) {
        option (google.api.http) = { get: "/notification/v1/project-channel/{project_channel_id}" };
    }
    rpc list (ProjectChannelQuery) returns (ProjectChannelsInfo) {
        option (google.api.http) = {
            get: "/notification/v1/project-channels"
            additional_bindings {
                post: "/notification/v1/project-channels/search"
            }
        };
    }
    rpc stat (ProjectChannelStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/notification/v1/project-channels/stat" };
    }
}

message ProjectChannelSchedule {
    enum DayOfWeek {
        NONE = 0;
        MON = 1;
        TUE = 2;
        WED = 3;
        THU = 4;
        FRI = 5;
        SAT = 6;
        SUN = 7;
    }

    repeated DayOfWeek day_of_week = 1;
    int32 start_hour = 2;
    int32 end_hour = 3;
}

message CreateProjectChannelRequest {
    // is_required: true
    string protocol_id = 1;
    // is_required: true
    string name = 2;
    // is_required: true
    string schema = 3;
    // is_required: true
    google.protobuf.Struct data = 4;
    // is_required: false
    repeated string subscriptions = 5;
    // is_required: false
    string notification_level = 6;
    // is_required: false
    ProjectChannelSchedule schedule = 7;
    // is_required: false
    google.protobuf.Struct tags = 8;
    // is_required: true
    string project_id = 11;
    // is_required: true
    string domain_id = 12;
}

message UpdateProjectChannelRequest {
    // is_required: true
    string project_channel_id = 1;
    // is_required: false
    string name = 2;
    // is_required: false
    google.protobuf.Struct data = 3;
    // is_required: false
    repeated string subscriptions = 4;
    // is_required: false
    string notification_level = 5;
    // is_required: false
    ProjectChannelSchedule schedule = 6;
    // is_required: false
    google.protobuf.Struct tags = 7;
    // is_required: true
    string domain_id = 11;
}

message ProjectChannelRequest {
    // is_required: true
    string project_channel_id = 1;
    // is_required: true
    string domain_id = 2;
}

message GetProjectChannelRequest {
    // is_required: true
    string project_channel_id = 1;
    // is_required: true
    string domain_id = 2;
    // is_required: false
    repeated string only = 3;
}

message ProjectChannelQuery {
    enum ProjectChannelState {
        NONE = 0;
        ENABLED = 1;
        DISABLED = 2;
    }

    // is_required: false
    spaceone.api.core.v1.Query query = 1;
    // is_required: false
    string project_channel_id = 2;
    // is_required: false
    string name = 3;
    // is_required: false
    ProjectChannelState state = 4;
    // is_required: false
    string schema = 5;
    // is_required: false
    string secret_id = 6;
    // is_required: false
    string notification_level = 7;
    // is_required: false
    string protocol_id = 11;
    // is_required: false
    string project_id = 12;
    // is_required: true
    string domain_id = 13;
}

message ProjectChannelInfo {
    enum ProjectChannelState {
        NONE = 0;
        ENABLED = 1;
        DISABLED = 2;
    }

    string project_channel_id = 1;
    string name = 2;
    ProjectChannelState state = 3;
    string schema = 4;
    google.protobuf.Struct data = 5;
    string secret_id = 6;
    repeated string subscriptions = 7;
    string notification_level = 8;
    ProjectChannelSchedule schedule = 9;
    google.protobuf.Struct tags = 10;
    string protocol_id = 11;
    string project_id = 12;
    string domain_id = 13;
    string created_at = 21;
}

message ProjectChannelsInfo {
    repeated ProjectChannelInfo results = 1;
    int32 total_count = 2;
}

message ProjectChannelStatQuery {
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 1;
    // is_required: true
    string domain_id = 2;
}