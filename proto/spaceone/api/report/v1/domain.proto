syntax = "proto3";

package spaceone.api.report.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "google/api/http.proto";
import "spaceone/api/core/v1/query.proto";


service Domain {
    rpc get (GetDomainRequest) returns (DomainInfo) {
        option (google.api.http) = {get: "/report/v1/domain/{domain_id}"};
    }
    rpc list (DomainQuery) returns (DomainsInfo) {
        option (google.api.http) = {
            get: "/report/v1/domains"
            additional_bindings {
                post: "/report/v1/domains/search"
            }
        };
    }
    rpc enable (EnableDomainRequest) returns (DomainInfo) {
        option (google.api.http) = {put: "/report/v1/domain/{domain_id}/enable"};
    }
    rpc disable (DisableDomainRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {put: "/report/v1/domain/{domain_id}/disable"};
    }

}

message GetDomainRequest {
    // is_required: true
    string domain_id = 1;
    // is_required: false
    repeated string only = 3;
}
message EnableDomainRequest {
    // is_required: true
    string domain_id = 1;
}
message DisableDomainRequest {
    // is_required: true
    string domain_id = 1;
}

message DomainQuery {
    // is_required: false
    string domain_id = 1;
    // is_required: false
    spaceone.api.core.v1.Query query = 2;
}

message IdentityInfo {
    string key = 1;
    string value = 2;
}

message RelationResourceInfo {
    string service = 1;
    string resource = 2;
    repeated IdentityInfo identity = 3;
    google.protobuf.Struct tags = 4;
}


message DomainInfo {
    string domain_id = 1;
    repeated string register_templates = 2;
    repeated RelationResourceInfo relation_resources = 3;
}

message DomainsInfo {
    repeated DomainInfo results = 1;
    int32 total_count = 2;
}