syntax = "proto3";

package spaceone.api.report.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "google/api/http.proto";
import "spaceone/api/core/v1/query.proto";
import "spaceone/api/report/v1/storage_type.proto";

service Storage {
    rpc get (GetStorageRequest) returns (StorageInfo) {
        option (google.api.http) = {get: "/report/v1/storage/{storage_id}"};
    }
    rpc list (StorageQuery) returns (StoragesInfo) {
        option (google.api.http) = {
            get: "/report/v1/storages"
            additional_bindings {
                post: "/report/v1/storages/search"
            }
        };
    }
    rpc register (RegisterStorageRequest) returns (StorageInfo) {
        option (google.api.http) = {post: "/report/v1/storage"};
    }
    rpc deregister (DeregisterStorageRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {delete: "/report/v1/storage/{storage_id}"};
    }
    rpc update (UpdateStorageRequest) returns (StorageInfo) {
        option (google.api.http) = {put: "/report/v1/storage/{storage_id}"};
    }
}

message GetStorageRequest {
    // is_required: true
    string domain_id = 1;
    // is_required: true
    string storage_id = 2;
    // is_required: false
    repeated string only = 3;
}
message RegisterStorageRequest {
    // is_required: true
    string domain_id = 1;
    // is_required: true
    string name = 2;
    // is_required : true
    string secret_id = 3;
    // is_required : true
    string storage_type_id = 4;
    // is_required : true
    google.protobuf.Struct options = 5;
}
message DeregisterStorageRequest {
    // is_required: true
    string domain_id = 1;
    // is_required: true
    string storage_id = 2;
}

message UpdateStorageRequest {
    // is_required: true
    string domain_id = 1;
    // is_required: true
    string storage_id = 2;
    // is_required : false
    string secret_id = 3;
    // is_required : false
    google.protobuf.Struct options = 4;
    // is_required : false
    string name = 5;


}
message StorageQuery {
    // is_required: true
    string domain_id = 1;
    // is_required: false
    spaceone.api.core.v1.Query query = 2;
    // is_required: false
    string storage_id = 3;
    // is_required: false
    string storage_type_id = 4;
    // is_required: false
    string secret_id = 5;
    // is_required: false
    string name = 6;
}

message StorageInfo {
    string domain_id = 1;
    string storage_id = 2;
    string name = 3;
    string secret_id = 4;
    spaceone.api.report.v1.StorageTypeInfo storage_type_info = 5;
    google.protobuf.Struct options = 6;
    string created_at = 7;
}

message StoragesInfo {
    repeated StorageInfo results = 1;
    int32 total_count = 2;
}