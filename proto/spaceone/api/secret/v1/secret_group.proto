syntax = "proto3";

package spaceone.api.secret.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/secret/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";
import "spaceone/api/secret/v1/secret.proto";


service SecretGroup {
    rpc create (CreateSecretGroupRequest) returns (SecretGroupInfo) {
        option (google.api.http) = {
            post: "/secret/v1/secret-group/create"
            body: "*"
        };
    }
    rpc update (UpdateSecretGroupRequest) returns (SecretGroupInfo) {
        option (google.api.http) = {
            post: "/secret/v1/secret-group/update"
            body: "*"
        };
    }
    rpc add_secret (SecretGroupSecretRequest) returns (SecretGroupSecretInfo) {
        option (google.api.http) = {
            post: "/secret/v1/secret-group/add-secret"
            body: "*"
        };
    }
    rpc remove_secret (SecretGroupSecretRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/secret/v1/secret-group/remove-secret"
            body: "*"
        };
    }
    rpc delete (SecretGroupRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/secret/v1/secret-group/delete"
            body: "*"
        };
    }
    rpc get (GetSecretGroupRequest) returns (SecretGroupInfo) {
        option (google.api.http) = {
            post: "/secret/v1/secret-group/get"
            body: "*"
        };
    }
    rpc list (SecretGroupQuery) returns (SecretGroupsInfo) {
        option (google.api.http) = {
            post: "/secret/v1/secret-group/list"
            body: "*"
        };
    }
    rpc stat (SecretGroupStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/secret/v1/secret-group/stat"
            body: "*"
        };
    }
}

message CreateSecretGroupRequest {
    // is_required: true
    string name = 1;
    // is_required: false
    google.protobuf.Struct tags = 2;
    // is_required: true
    string domain_id = 3;
}

message UpdateSecretGroupRequest {
    // is_required: true
    string secret_group_id = 1;
    // is_required: false
    string name = 2;
    // is_required: false
    google.protobuf.Struct tags = 3;
    // is_required: true
    string domain_id = 4;
}

message SecretGroupRequest {
    // is_required: true
    string secret_group_id = 1;
    // is_required: true
    string domain_id = 2;
}

message GetSecretGroupRequest {
    // is_required: true
    string secret_group_id = 1;
    // is_required: true
    string domain_id = 2;
    // is_required: false
    repeated string only = 3;
}

message SecretGroupSecretRequest {
    // is_required: true
    string secret_group_id = 1;
    // is_required: true
    string secret_id = 2;
    // is_required: true
    string domain_id = 5;
}

message SecretGroupQuery {
    // is_required: false
    spaceone.api.core.v1.Query query = 1;
    // is_required: false
    string secret_group_id = 2;
    // is_required: false
    string name = 3;
    // is_required: false
    string secret_id = 4;
    // is_required: true
    string domain_id = 5;
}

message SecretGroupSecretInfo {
    SecretGroupInfo secret_group_info = 1;
    spaceone.api.secret.v1.SecretInfo secret_info = 2;
    string domain_id = 5;
}

message SecretGroupInfo {
    string secret_group_id = 1;
    string name = 2;
    google.protobuf.Struct tags = 4;
    string domain_id = 5;
    string created_at = 6;
}

message SecretGroupsInfo {
    repeated SecretGroupInfo results = 1;
    int32 total_count = 2;
}

message SecretGroupStatQuery {
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 1;
    // is_required: true
    string domain_id = 2;
}
