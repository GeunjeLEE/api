syntax = "proto3";

package spaceone.api.config.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service ConfigMap {
    rpc create (CreateConfigMapRequest) returns (ConfigMapInfo) {
        option (google.api.http) = { post: "/config/v1/config-maps" };
    }
    rpc update (UpdateConfigMapRequest) returns (ConfigMapInfo) {
        option (google.api.http) = { put: "/config/v1/config-map/{name}" };
    }
    rpc delete (ConfigMapRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/config/v1/config-map/{name}" };
    }
    rpc get (GetConfigMapRequest) returns (ConfigMapInfo) {
        option (google.api.http) = { get: "/config/v1/config-map/{name}" };
    }
    rpc list (ConfigMapQuery) returns (ConfigMapsInfo) {
        option (google.api.http) = {
            get: "/config/v1/config-maps"
            additional_bindings {
                post: "/config/v1/config-maps/search"
            }
        };
    }
    rpc stat (ConfigMapStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/config/v1/config-maps/stat" };
    }
}

message CreateConfigMapRequest {
    /*
    is_required: true
    desc:
    */
    string name = 1;
    /*
    is_required: true
    desc:
    */
    google.protobuf.Struct data = 2;
    /*
    is_required: false
    desc:
    */
    google.protobuf.Struct tags = 3;
    /*
    is_required: true
    desc:
    */
    string domain_id = 4;
}

message UpdateConfigMapRequest {
    /*
    is_required: true
    desc:
    */
    string name = 1;
    /*
    is_required: false
    desc:
    */
    google.protobuf.Struct data = 2;
    /*
    is_required: false
    desc:
    */
    google.protobuf.Struct tags = 3;
    /*
    is_required: true
    desc:
    */
    string domain_id = 4;
}

message ConfigMapRequest {
    /*
    is_required: true
    desc:
    */
    string name = 1;
    /*
    is_required: true
    desc:
    */
    string domain_id = 2;
}

message GetConfigMapRequest {
    /*
    is_required: true
    desc:
    */
    string name = 1;
    /*
    is_required: true
    desc:
    */
    string domain_id = 2;
    /*
    is_required: false
    desc:
    */
    repeated string only = 3;
}

message ConfigMapQuery {
    /*
    is_required: false
    desc:
    */
    spaceone.api.core.v1.Query query = 1;
    /*
    is_required: false
    desc:
    */
    string name = 2;
    /*
    is_required: true
    desc:
    */
    string domain_id = 3;
}

message ConfigMapInfo {
    string name = 1;
    google.protobuf.Struct data = 2;
    google.protobuf.Struct tags = 3;
    string domain_id = 4;
    google.protobuf.Timestamp created_at = 5;
}

message ConfigMapsInfo {
    repeated ConfigMapInfo results = 1;
    int32 total_count = 2;
}

message ConfigMapStatQuery {
    /*
    is_required: true
    desc:
    */
    spaceone.api.core.v1.StatisticsQuery query = 1;
    /*
    is_required: true
    desc:
    */
    string domain_id = 2;
}