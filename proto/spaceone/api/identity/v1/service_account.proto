syntax = "proto3";

package spaceone.api.identity.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";
import "spaceone/api/identity/v1/project.proto";

service ServiceAccount {
    rpc create (CreateServiceAccountRequest) returns (ServiceAccountInfo) {
        option (google.api.http) = { post: "/identity/v1/service-accounts" };
    }
    rpc update (UpdateServiceAccountRequest) returns (ServiceAccountInfo) {
        option (google.api.http) = { put: "/identity/v1/service-account/{service_account_id}" };
    }
    rpc delete (ServiceAccountRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/identity/v1/service-account/{service_account_id}" };
    }
    rpc get (GetServiceAccountRequest) returns (ServiceAccountInfo) {
        option (google.api.http) = { get: "/identity/v1/service-account/{service_account_id}" };
    }
    rpc list (ServiceAccountQuery) returns (ServiceAccountsInfo) {
        option (google.api.http) = {
            get: "/identity/v1/service-accounts"
            additional_bindings {
                post: "/identity/v1/service-accounts/search"
            }
        };
    }
    rpc stat (ServiceAccountStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/identity/v1/service-accounts/stat" };
    }
}

message CreateServiceAccountRequest {
    /*
    is_required: true
    desc:
    */
    string name = 1;
    /*
    is_required: true
    desc:
    */
    google.protobuf.Struct data = 2;
    /*
    is_required: true
    desc:
    */
    string provider = 3;
    /*
    is_required: false
    desc:
    */
    string project_id = 4;
    /*
    is_required: false
    desc:
    */
    google.protobuf.Struct tags = 5;
    /*
    is_required: true
    desc:
    */
    string domain_id = 6;
}

message UpdateServiceAccountRequest {
    /*
    is_required: true
    desc:
    */
    string service_account_id = 1;
    /*
    is_required: false
    desc:
    */
    string name = 2;
    /*
    is_required: false
    desc:
    */
    google.protobuf.Struct data = 3;
    /*
    is_required: false
    desc:
    */
    string project_id = 4;
    /*
    is_required: false
    desc:
    */
    google.protobuf.Struct tags = 5;
    /*
    is_required: true
    desc:
    */
    string domain_id = 6;
    /*
    is_required: false
    desc:
    */
    bool release_project = 7;
}

message ServiceAccountRequest {
    /*
    is_required: true
    desc:
    */
    string service_account_id = 1;
    /*
    is_required: true
    desc:
    */
    string domain_id = 2;
}

message GetServiceAccountRequest {
    /*
    is_required: true
    desc:
    */
    string service_account_id = 1;
    /*
    is_required: true
    desc:
    */
    string domain_id = 2;
    /*
    is_required: false
    desc:
    */
    repeated string only = 3;
}

message ServiceAccountQuery {
    /*
    is_required: false
    desc:
    */
    spaceone.api.core.v1.Query query = 1;
    /*
    is_required: false
    desc:
    */
    string service_account_id = 2;
    /*
    is_required: false
    desc:
    */
    string name = 3;
    /*
    is_required: false
    desc:
    */
    string provider = 4;
    /*
    is_required: false
    desc:
    */
    string project_id = 5;
    /*
    is_required: false
    desc:
    */
    string domain_id = 6;
}

message ServiceAccountInfo {
    string service_account_id = 1;
    string name = 2;
    google.protobuf.Struct data = 3;
    string provider = 4;
    spaceone.api.identity.v1.ProjectInfo project_info = 5;
    string domain_id = 6;
    google.protobuf.Struct tags = 7;
    google.protobuf.Timestamp created_at = 8;
}

message ServiceAccountsInfo {
    repeated ServiceAccountInfo results = 1;
    int32 total_count = 2;
}

message ServiceAccountStatQuery {
    /*
    is_required: true
    desc:
    */
    spaceone.api.core.v1.StatisticsQuery query = 1;
    /*
    is_required: true
    desc:
    */
    string domain_id = 2;
}