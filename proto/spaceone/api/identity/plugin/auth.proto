syntax = "proto3";

package spaceone.api.identity.plugin;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

service Auth {
    rpc init (InitRequest) returns (PluginInfo) {}
    rpc verify (VerifyRequest) returns (google.protobuf.Empty) {}
    rpc find (FindRequest) returns (UsersInfo) {}
    rpc login (LoginRequest) returns (UserInfo) {}
}

message InitRequest {
    // is_required: true
    google.protobuf.Struct options = 1;
}

message VerifyRequest {
    // is_required: true
    google.protobuf.Struct options = 1;
    // is_required: true
    google.protobuf.Struct secret_data = 2;
    // is_required: false
    string schema = 3;
}

message FindRequest {
    // is_required: true
    google.protobuf.Struct options = 1;
    // is_required: true
    google.protobuf.Struct secret_data = 2;
    // is_required: false
    string user_id = 3;
    // is_required: false
    string keyword = 4;
    // is_required: false
    string schema = 5;
}

message LoginRequest {
    // is_required: true
    google.protobuf.Struct options = 1;
    // is_required: true
    google.protobuf.Struct secret_data = 2;
    // is_required: true
    google.protobuf.Struct user_credentials = 3;
    // is_required: false
    string schema = 4;
}

message UserInfo {
    enum State {
        NONE = 0;
        ENABLED = 1;
        DISABLED = 2;
        UNIDENTIFIED = 3;
    }
    string user_id = 1;
    string name = 2;
    string email = 3;
    string mobile = 4;
    string group = 5;
    State state = 6;
}

message UsersInfo {
    repeated UserInfo results = 1;
    int32 total_count = 2;           // will be depricated
    bool more = 3; 
}

// Deprecated
message AuthVerifyInfo {
    google.protobuf.Struct options = 1;
}

message PluginInfo {
    google.protobuf.Struct metadata = 1;
}

